{"version":3,"sources":["components/todo/TodoItem.module.scss","components/todo/TodoForm.module.scss","components/Layout/Header.module.scss","components/UI/Backdrop.module.scss","components/UI/Card.module.scss","store/TodoSlice.js","components/Layout/Header.js","components/UI/AddIcon.js","components/UI/Backdrop.js","components/todo/TodoShowForm.js","components/todo/TodoForm.js","components/UI/Card.js","components/todo/TodoItem.js","components/todo/Todo.js","App.js","store/todo-store.js","index.js"],"names":["module","exports","initialState","Header","className","styles","header","AddIcon","xmlns","width","height","viewBox","stroke","fill","d","x1","y1","x2","y2","Backdrop","props","root","document","getElementById","Fragment","createPortal","overlay","onClick","existingData","localStorage","getItem","JSON","parse","todo","TodoSlice","createSlice","name","reducers","addItem","state","item","push","payload","jsonData","stringify","setItem","removeItem","filter","elem","title","editItem","index","findIndex","prev","new","TodoActions","actions","todoReducer","reducer","TodoShowForm","dispatch","useDispatch","useState","formError","setFormError","descInput","useRef","titleInput","disableError","e","cont","onSubmit","preventDefault","desc","current","value","trim","onEnter","description","htmlFor","id","type","ref","onChange","TodoForm","onClose","data","onFinish","Card","card","children","TodoItem","isEditing","setIsEditing","editTitleValue","editDescValue","li","btnCont","form","oldItem","newItem","placeholder","Todo","listItems","useSelector","map","App","formStatus","setFormStatus","store","configureStore","ReactDOM","render"],"mappings":"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","file":"static/js/main.88b29fbb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"base-color\":\"#f4dfd0\",\"text-color\":\"#242424\",\"comp-color\":\"#d0e5f4\",\"li\":\"TodoItem_li__b-yB9\",\"btnCont\":\"TodoItem_btnCont__CoY0G\",\"form\":\"TodoItem_form__2EC7z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base-color\":\"#f4dfd0\",\"text-color\":\"#242424\",\"comp-color\":\"#d0e5f4\",\"cont\":\"TodoForm_cont__3ZNRx\",\"title\":\"TodoForm_title__2hVjm\",\"desc\":\"TodoForm_desc__bzbTK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base-color\":\"#f4dfd0\",\"text-color\":\"#242424\",\"comp-color\":\"#d0e5f4\",\"header\":\"Header_header__3XRVY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Backdrop_overlay__tHxI3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__syld-\"};","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst existingData = localStorage.getItem(\"todo\");\nlet initialState;\n\nif (existingData) {\n  let prevState = JSON.parse(existingData);\n  initialState = prevState;\n} else {\n  initialState = {\n    todo: [],\n  };\n}\n\nconst TodoSlice = createSlice({\n  name: \"todo\",\n  initialState: initialState,\n  reducers: {\n    addItem: (state, item) => {\n      state.todo.push(item.payload);\n      const jsonData = JSON.stringify(state);\n      localStorage.setItem(\"todo\", jsonData);\n    },\n    removeItem(state, item) {\n      state.todo = state.todo.filter(\n        (elem) => elem.title !== item.payload.title\n      );\n      const jsonData = JSON.stringify(state);\n      localStorage.setItem(\"todo\", jsonData);\n    },\n    editItem(state, item) {\n      const index = state.todo.findIndex(\n        (elem) => (elem.title = item.payload.prev.title)\n      );\n      state.todo[index] = item.payload.new;\n      const jsonData = JSON.stringify(state);\n      localStorage.setItem(\"todo\", jsonData);\n    },\n  },\n});\n\nexport const TodoActions = TodoSlice.actions;\nexport const todoReducer = TodoSlice.reducer;\nexport default TodoSlice;\n","import styles from \"./Header.module.scss\";\n\nconst Header = () => {\n  return (\n    <header className={styles.header}>\n      <h2>To-do List</h2>\n    </header>\n  );\n};\n\nexport default Header;\n","const AddIcon = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"icon icon-tabler icon-tabler-plus\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    stroke-width=\"1.5\"\n    stroke=\"#242424\"\n    fill=\"none\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n  >\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n    <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\" />\n    <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\" />\n  </svg>\n);\n\nexport default AddIcon;\n","import React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport styles from \"./Backdrop.module.scss\";\n\nconst Backdrop = (props) => {\n  const root = document.getElementById(\"backdrop-root\");\n  return (\n    <React.Fragment>\n      {createPortal(\n        <div className={styles.overlay} onClick={props.onClick}></div>,\n        root\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Backdrop;\n","import styles from \"./TodoForm.module.scss\";\nimport { useState, useRef } from \"react\";\nimport { TodoActions } from \"../../store/TodoSlice\";\nimport { useDispatch } from \"react-redux\";\nconst TodoShowForm = (props) => {\n  const dispatch = useDispatch();\n  const [formError, setFormError] = useState(false);\n  const descInput = useRef();\n  const titleInput = useRef();\n  const submitHandler = (e) => {\n    e.preventDefault();\n    let desc = descInput.current.value;\n    let title = titleInput.current.value;\n    if (desc.trim() !== \"\" && title.trim() !== \"\") {\n      props.onEnter();\n      dispatch(TodoActions.addItem({ title: title, description: desc }));\n    } else {\n      setFormError(true);\n    }\n  };\n\n  const disableError = (e) => {\n    setFormError(false);\n  };\n  return (\n    <div className={styles.cont}>\n      <form onSubmit={submitHandler}>\n        <div>\n          <label htmlFor=\"title\">Title:</label>\n          <input\n            id=\"title\"\n            type=\"text\"\n            name=\"title\"\n            className={styles.title}\n            ref={titleInput}\n            onChange={disableError}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"desc\">Description:</label>\n          <input\n            id=\"desc\"\n            type=\"text\"\n            name=\"desc\"\n            className={styles.desc}\n            ref={descInput}\n            onChange={disableError}\n          />\n        </div>\n        <button type=\"submit\">Add</button>\n        {formError && <p>Please enter data in to the form fields!</p>}\n      </form>\n    </div>\n  );\n};\n\nexport default TodoShowForm;\n","import Backdrop from \"../UI/Backdrop\";\nimport { createPortal } from \"react-dom\";\nimport TodoShowForm from \"./TodoShowForm\";\nimport React from \"react\";\n\nconst TodoForm = (props) => {\n  const formCloseHandler = (e) => {\n    props.onClose();\n  };\n\n  const formSubmitHandler = (data) => {\n    props.onFinish(data);\n  };\n  return (\n    <React.Fragment>\n      <Backdrop onClick={formCloseHandler} />\n      {createPortal(\n        <TodoShowForm onEnter={formSubmitHandler} />,\n        document.getElementById(\"modal-root\")\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default TodoForm;\n","import styles from \"./Card.module.scss\";\n\nconst Card = (props) => {\n  return <div className={styles.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import React, { useRef, useState } from \"react\";\nimport styles from \"./TodoItem.module.scss\";\nimport Card from \"../UI/Card\";\nimport { TodoActions } from \"../../store/TodoSlice\";\nimport { useDispatch } from \"react-redux\";\nconst TodoItem = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const editTitleValue = useRef();\n  const editDescValue = useRef();\n  const dispatch = useDispatch();\n  const deleteHandler = () => {\n    dispatch(TodoActions.removeItem(props));\n  };\n\n  const editHandler = () => {\n    setIsEditing(true);\n  };\n\n  const cancelEditingHandler = (e) => {\n    e.preventDefault();\n    setIsEditing(false);\n  };\n\n  const submitEditHandler = (e) => {\n    e.preventDefault();\n    const oldItem = { title: props.title, description: props.description };\n    const newItem = {\n      title: editTitleValue.current.value,\n      description: editDescValue.current.value,\n    };\n    dispatch(TodoActions.editItem({ prev: oldItem, new: newItem }));\n    setIsEditing(false);\n  };\n  return (\n    <Card>\n      {!isEditing && (\n        <React.Fragment>\n          <li className={styles.li}>{props.title}</li>\n          <li className={styles.li}>{props.description}</li>\n          <div className={styles.btnCont}>\n            <button onClick={editHandler}>Edit</button>\n            <button onClick={deleteHandler}>✖</button>\n          </div>\n        </React.Fragment>\n      )}\n      {isEditing && (\n        <React.Fragment>\n          <form className={styles.form} onSubmit={submitEditHandler}>\n            <input\n              type=\"text\"\n              placeholder={props.title}\n              className={styles.li}\n              ref={editTitleValue}\n            ></input>\n            <input\n              type=\"text\"\n              placeholder={props.description}\n              className={styles.li}\n              ref={editDescValue}\n            ></input>\n            <div className={styles.btnCont}>\n              <button type=\"submit\"> Submit </button>\n              <button onClick={cancelEditingHandler}> Cancel </button>\n            </div>\n          </form>\n        </React.Fragment>\n      )}\n    </Card>\n  );\n};\n\nexport default TodoItem;\n","import { useSelector } from \"react-redux\";\nimport TodoItem from \"./TodoItem\";\nimport React from \"react\";\n\nconst Todo = () => {\n  const todoList = useSelector((state) => state.todo);\n  const listItems = todoList.map((elem) => (\n    <TodoItem title={elem.title} description={elem.description} />\n  ));\n  return <React.Fragment>{listItems}</React.Fragment>;\n};\n\nexport default Todo;\n","import React, { useState } from \"react\";\nimport \"./App.scss\";\nimport Header from \"./components/Layout/Header\";\nimport AddIcon from \"./components/UI/AddIcon\";\nimport TodoForm from \"./components/todo/TodoForm\";\nimport Todo from \"./components/todo/Todo\";\nfunction App() {\n  const [formStatus, setFormStatus] = useState(false);\n  const formCloseHandler = () => {\n    setFormStatus(false);\n  };\n\n  const formOpenHandler = (e) => {\n    setFormStatus(true);\n  };\n\n  const formDataHandler = () => {\n    setFormStatus(false);\n  };\n  return (\n    <React.Fragment>\n      {formStatus && (\n        <TodoForm onClose={formCloseHandler} onFinish={formDataHandler} />\n      )}\n      <Header />\n      <div className=\"btn--container\">\n        <button className=\"button\" onClick={formOpenHandler}>\n          {AddIcon}Add To-do\n        </button>\n      </div>\n      <div className={\"main\"}>\n        <Todo />\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { todoReducer } from \"./TodoSlice\";\n\nconst store = configureStore({ reducer: todoReducer });\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"@fontsource/comfortaa\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/todo-store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}